{"version":3,"file":"static/js/214.b6d93de2.chunk.js","mappings":"iPA0BaA,EAAoBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iBAvBb,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OACpCC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mfAMQE,EAAMG,WAAWH,MACbA,EAAMI,UAAU,GAMQJ,EAAMK,YAAY,GAIxCL,EAAMI,UAAU,GAAE,IAgBxBE,EAAeX,EAAAA,EAAOY,EAACC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iBAPD,SAAHW,GAAA,IAAMT,EAAKS,EAALT,MAAK,OAAOC,EAAAA,EAAAA,IAAGS,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+FAEdE,EAAMK,YAAY,GAAE,IAa9CM,EAAyBhB,EAAAA,EAAOiB,OAAMC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,iBAJlB,SAAHgB,GAAA,IAAMd,EAAKc,EAALd,MAAK,OAAOC,EAAAA,EAAAA,IAAGc,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,wBACxCE,EAAMG,WAAWa,OAAM,I,6BCuBlC,MAtDA,WACE,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAWF,EAAA,GAAEG,EAAYH,EAAA,GAC1BI,GAAYC,EAAAA,EAAAA,MACZC,GAASC,EAAAA,EAAAA,MAETC,EAAY,WAChBL,GAAa,EACf,EAEMM,EAAa,WACjBN,GAAa,EACf,EAEA,OACGC,GAAgC,IAAlBE,EAAOI,QAoBhBC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACJC,EAAAA,EAAAA,KAACvC,EAAiB,CAAAsC,UAChBF,EAAAA,EAAAA,MAACxB,EAAY,CAAA0B,SAAA,CAAC,iCAEZC,EAAAA,EAAAA,KAACtB,EAAsB,CAACuB,QAASP,EAAUK,SAAC,sBAEnB,aAK5BX,IACCY,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,OAAQf,EAAagB,QAAST,EAAWI,UAC9CC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACD,QAAST,UAhC7BE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACvC,EAAiB,CAAAsC,UAChBF,EAAAA,EAAAA,MAACxB,EAAY,CAAA0B,SAAA,CAAC,qDAEZC,EAAAA,EAAAA,KAACtB,EAAsB,CAACuB,QAASP,EAAUK,SAAC,sBAEnB,gMAO5BX,IACCY,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,OAAQf,EAAagB,QAAST,EAAWI,UAC9CC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACD,QAAST,QAsBrC,C","sources":["pages/styled/HomePage.styled.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst HomePageDynamicStyles = ({ theme }) =>\n  css`\n    width: calc(100vh - 225px);\n    height: calc(100vh - 60px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${theme.textColors.theme};\n    font-size: ${theme.fontSizes[2]};\n    line-height: 1.5;\n    letter-spacing: -0.26px;\n    text-align: center;\n    margin: 0 auto;\n\n    @media only screen and (min-width: ${theme.breakpoints[1]}) {\n      width: calc(100vh - 260px);\n      height: calc(100vh - 68px);\n      flex-direction: column;\n      font-size: ${theme.fontSizes[3]};\n      line-height: 1.28571;\n    }\n  `;\n\nexport const HomePageContainer = styled.div`\n  ${HomePageDynamicStyles}\n`;\n\nconst HomePageTextDynnamicStyles = ({ theme }) => css`\n  width: 335px;\n  @media only screen and (min-width: ${theme.breakpoints[1]}) {\n    width: 486px;\n  }\n`;\n\nexport const HomePageText = styled.p`\n  ${HomePageTextDynnamicStyles}\n`;\n\nconst HomePageBtnDynamicStyles = ({ theme }) => css`\n  color: ${theme.textColors.accent};\n`;\n\nexport const HomePageCreateBoardBtn = styled.button`\n  ${HomePageBtnDynamicStyles}\n`;\n","import { useState } from 'react';\nimport { useAllBoards, useIsBoardsLoading } from 'hooks';\n\nimport {\n  HomePageContainer,\n  HomePageText,\n  HomePageCreateBoardBtn,\n} from './styled/HomePage.styled';\nimport Modal from 'components/ModalWindow/ModalWindow';\nimport CreateNewBoard from 'components/NewBoardForm/NewBoardForm';\n\nfunction HomePage() {\n  const [isModalOpen, setModalOpen] = useState(false);\n  const isLoading = useIsBoardsLoading();\n  const boards = useAllBoards()\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (   \n    !isLoading &&  boards.length === 0 ? (\n      <>\n        <HomePageContainer>\n          <HomePageText>\n            Before starting your project, it is essential&nbsp;\n            <HomePageCreateBoardBtn onClick={openModal}>\n              to create a board\n            </HomePageCreateBoardBtn>\n            &nbsp; to visualize and track all the necessary tasks and\n            milestones. This board serves as a powerful tool to organize the\n            workflow and ensure effective collaboration among team members.\n          </HomePageText>\n        </HomePageContainer>\n\n        {isModalOpen && (\n          <Modal isOpen={isModalOpen} onClose={closeModal}>\n            <CreateNewBoard onClose={closeModal} />\n          </Modal>\n        )}\n      </>\n    ) : ( <>\n      <HomePageContainer>\n        <HomePageText>\n         Open your board or click &nbsp;\n          <HomePageCreateBoardBtn onClick={openModal}>\n            to create a board\n          </HomePageCreateBoardBtn>\n          &nbsp;.\n        </HomePageText>\n      </HomePageContainer>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <CreateNewBoard onClose={closeModal} />\n        </Modal>\n      )}\n    </>)\n  );\n}\n\nexport default HomePage;\n"],"names":["HomePageContainer","styled","div","_templateObject2","_taggedTemplateLiteral","_ref","theme","css","_templateObject","textColors","fontSizes","breakpoints","HomePageText","p","_templateObject4","_ref2","_templateObject3","HomePageCreateBoardBtn","button","_templateObject6","_ref3","_templateObject5","accent","_useState","useState","_useState2","_slicedToArray","isModalOpen","setModalOpen","isLoading","useIsBoardsLoading","boards","useAllBoards","openModal","closeModal","length","_jsxs","_Fragment","children","_jsx","onClick","Modal","isOpen","onClose","CreateNewBoard"],"sourceRoot":""}